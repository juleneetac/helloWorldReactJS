apiVersion: v1
kind: Template
labels:
  template: pdl-app
  app: pdl-app
metadata:
  annotations:
    iconClass: icon-tomcat
  name: pdl-app
parameters:
  - displayName: PROJECT
    description: "Openshift Project"
    value: sdc
    name: PROJECT
    required: true
  - displayName: APP
    description: "Openshift APP Name"
    value: app
    name: APP
    required: true
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APP}-dc
      labels:
        app: ${APP}
    spec:
      replicas: 1
      selector:
        app: ${APP}
      strategy:
        type: Rolling
        activeDeadlineSeconds: 21600
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
      template:
        metadata:
          labels:
            app: ${APP}
        spec:
          containers:
            - image: 172.30.1.1:5000/${PROJECT}/${APP}:latest
            # - image: docker-registry.default.svc:5000/${PROJECT}/${APP}:latest
              name: ${APP}
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /nginx-health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /nginx-health
                  port: 8080
                scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5

              resources:
                requests:
                  cpu: 200m
                  memory: 400Mi
                limits:
                  cpu: 800m
                  memory: 2Gi
              ports:
                - containerPort: 8080
                  protocol: TCP
      triggers: []
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APP}-svc
      labels:
        app: ${APP}
    spec:
      ports:
        - port: 8080
          targetPort: 8080
          protocol: TCP
          name: ${APP}-dc
      selector:
        app: ${APP}
  - apiVersion: v1
    kind: Route
    metadata:
      name: ${APP}-route
      labels:
        app: ${APP}        
    spec:
      # host: ${APP}-${PROJECT}.dev.aws.seat.cloud.vwgroup.com      #Dejo que genere una Route por defecto por eso lo comento
      # tls:
      #   insecureEdgeTerminationPolicy: Redirect
      #   termination: edge
      to:
        kind: Service
        name: ${APP}-svc
        weight: 100
      wildcardPolicy: None        
  - apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${APP}-hpa-cpu
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${APP}-dc
        apiVersion: apps.openshift.io/v1
        subresource: scale
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
