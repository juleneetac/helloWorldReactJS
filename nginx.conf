# auto detects a good number of processes to run
user  nginx;
worker_processes auto;
worker_rlimit_nofile 100000;


error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # log_format compression '$remote_addr - $remote_user [$time_local] '
    #     '"$request" $status $upstream_addr '
    #     '"$http_referer" "$http_user_agent"';
    
    # save logs here
    access_log  /var/log/app/access.log  main;
    error_log  /var/log/app/error.log warn;

    server {
        # listen on port 8080
        listen 8080;
        server_name localhost;

        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # what file to server as index
        index  index.html;

        location ~* .(woff|eot|ttf|svg|mp4|webm|jpg|jpeg|png|gif|ico|css|js|html)$ {
        proxy_ignore_headers Cache-Control Expires;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        root   /opt/app;
        try_files $uri $uri/ /index.html;
      }

      location = /  {


        root   /opt/app;
        try_files $uri $uri/ /index.html;
      }

      location /nginx-health {
            access_log off;
            return 200 'Service UP';
            add_header Content-Type text/plain;
      }

        # location / {
        #     # First attempt to serve request as file, then
        #     # as directory, then fall back to redirecting to index.html
        #     try_files $uri $uri/ /index.html;
        # }

        # # Media: images, icons, video, audio, HTC
        # location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        #   expires 1M;
        #   access_log off;
        #   add_header Cache-Control "public";
        # }

        # # Javascript and CSS files
        # location ~* \.(?:css|js)$ {
        #     try_files $uri =404;
        #     expires 1y;
        #     access_log off;
        #     add_header Cache-Control "public";
        # }

        # # Any route containing a file extension (e.g. /devicesfile.js)
        # location ~ ^.+\..+$ {
        #     try_files $uri =404;
        # }
    }
}