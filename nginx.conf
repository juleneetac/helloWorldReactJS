user  nginx;
worker_processes auto;
worker_rlimit_nofile 100000;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections 100000;

    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;
    access_log  /var/log/app/access.log  main;
    error_log  /var/log/app/error.log warn;
    # to boost I/O on HDD we can disable access logs
    #access_log off;

    server_tokens off;
    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 5;
    open_file_cache_errors on;

    # reduce the data that needs to be sent over network
    gzip on;
    gzip_static on;
    gzip_min_length 1000;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    #gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        image/png
        image/gif
        image/jpg
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        font/woff
        application/vnd.ms-fontobject
        application/octet-stream
        image/svg+xml;

    # cache for proxy_pass (reverse proxy)
    proxy_cache_path /tmp/nginx levels=1:2 keys_zone=myCache:10m inactive=60m;
    proxy_cache_key $host$uri$is_args$args$http_token$http_authorization$http_sub;
    proxy_cache_valid 200 1s;
    proxy_cache_methods GET HEAD;

    server {
      listen 8080;
      server_name localhost;

      #add_header Strict-Transport-Security "max-age=10886400; includeSubDomains; preload";
      #add_header Cache-Control "no-store";
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";

      index  index.html;

      location ~* .(woff|eot|ttf|svg|mp4|webm|jpg|jpeg|png|gif|ico|css|js|html)$ {
        proxy_ignore_headers Cache-Control Expires;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        root   /opt/app;
        try_files $uri $uri/ /index.html;
      }

      location = /  {


        root   /opt/app;
        try_files $uri $uri/ /index.html;
      }

      location /nginx-health {
            access_log off;
            return 200 'Service UP';
            add_header Content-Type text/plain;
      }
    }
}
